[user]
	name = Nicolas Morel
	email = nicolas@morel.io
	useConfigOnly = true

[color]
	ui = auto

[core]
	editor = subl -w -a
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	autocrlf = input
	askpass = /usr/bin/ksshaskpass
	untrackedCache = true
	pager = delta --line-numbers --syntax-theme zenburn

[branch]
	autosetuprebase = always

[alias]
	aliases = "!git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'"

	# Simple aliases
	c = commit
	co = checkout
	st = status -sb
	p = pull --all --prune
	pb = "!git p && git brune"
	fb = "!git fetch --all --prune && git brune"
	rh = reset --hard
	pf = push --force-with-lease

	# Commit stuff
	ca = commit -av
	cf = commit --fixup=HEAD
	caf = commit -a --fixup=HEAD
	cs = commit -ev --squash=HEAD
	cas = commit -eav --squash=HEAD
	can = commit -av --amend --no-edit
	canv = commit -av --amend --no-edit --no-verify
	amend = commit --amend
	ai = add -i
	unadd = rm -r --cached
	rom = rebase origin/master
	from = "!git fetch origin && git rom"

	# Diff stuff
	in = "!git rup; git log ..@{u}"
	out = log @{u}..
	din = "!git rup; git d ..@{u} -p"
	dout = diff -w @{u}..
	dpin = "!git rup; git log ..@{u} -p"
	dpout = log @{u}.. -p
	lin = "!git rup; git log ..@{u} --oneline"
	lout =log @{u}.. --oneline
	slin = "!git submodule foreach git lin"
	slout = "!git submodule foreach git lout"
	d = diff -w
	ds = diff -w --cached

	# Tree navigation
	glog = log --oneline --decorate --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr - %cD) %C(bold blue)<%an>%Creset'
	glogg = "!git glog --branches --remotes"
	glogs = "!git glog --stat"
	gloggs = "!git glogg --stat"

	# Branch stuff
	tracking-branch = rev-parse --abbrev-ref --symbolic-full-name "@{u}"
	current-branch = rev-parse --abbrev-ref --symbolic-full-name HEAD
	ri = rebase -i --autosquash
	rup = remote update -p
	undo = reset --soft HEAD^
	track = checkout -t
	rebranch = "!f() { git branch \"$1\" HEAD && git reset --hard @{u} && git checkout \"$1\"; };f"
	dbrune = "!LANGUAGE=en_US git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}'"
	brune = "!git dbrune | xargs --no-run-if-empty git branch -D"
	rbrune = "!git branch -r --merged $(git tracking-branch) | sed -e s/\\\\*//g | grep -v \"$(git current-branch)$\" | awk -F/ '{print $2}' | xargs --no-run-if-empty git push --no-verify origin --delete"
	drbrune = "!git branch -r --merged $(git tracking-branch) | sed -e s/\\\\*//g | grep -v \"$(git current-branch)$\" | awk -F/ '{print $2}' | xargs --no-run-if-empty git push --no-verify --dry-run origin --delete"
	comp = "!git co master && git pb"

	# Some tools
	h = rev-list --max-count=1 HEAD
	stats = "!git log --format='%C(bold blue)%aN%Creset <%C(yellow)%aE%Creset>' | awk '{arr[$0]++} END{for (i in arr){print arr[i], i;}}' | sort -rn"
	gstats = "!git log --branches --format='%C(bold blue)%aN%Creset <%C(yellow)%aE%Creset>' | awk '{arr[$0]++} END{for (i in arr){print arr[i], i;}}' | sort -rn"
	root = rev-parse --show-toplevel
	pack = "!git archive HEAD --format=tar | gzip > ./`git h`.tar.gz"
	ignore= "!([ ! -e .gitignore ] && touch .gitignore) | echo $1 >>.gitignore"
	su = submodule foreach git pull
	serve = "!git daemon --reuseaddr --verbose --base-path=. --export-all ./.git"
	wserve = "!git daemon --reuseaddr --verbose --enable=receive-pack --base-path=. --export-all ./.git"
	ignored = ls-files --others -i --exclude-standard
	include = config include.path

[push]
	default = tracking
	followTags = true

[merge]
	tool = kdiff3
	conflictstyle = diff3

[mergetool]
	prompt = false
	keepBackup = false
	keepTemporaries = false

[diff]
	renames = copies
	mnemonicPrefix = true
	wordRegex = .
	indentHeuristic = true
	colorMoved = default

[fetch]
	recurseSubmodules = true

[status]
	submoduleSummary = true

[credential]
	helper = cache --timeout=14400
[rebase]
	autostash = true
[receive]
	fsckObjects = true
[i18n]
	logOutputEncoding = UTF-8
[remote "origin"]
	tagopt = --tags

[sequence]
	editor = interactive-rebase-tool
[diff-so-fancy]
	markEmptyLines = false
[merge "npm-merge-driver"]
	name = automatically merge npm lockfiles
	driver = npx npm-merge-driver merge %A %O %B %P
[feature]
	manyFiles = true
[pack]
        writeReverseIndex = true

